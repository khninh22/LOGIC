#include "BookingDialog.h"
#include "AddCustomerDialog.h"
#include <QVBoxLayout>
#include <QGridLayout>
#include <QGroupBox>
#include <QLabel>
#include <QDialogButtonBox>
#include <QMessageBox>
#include <QPushButton>

BookingDialog::BookingDialog(QuanLyThueSan* sys, const QString& maSan, const QString& tenSan,
                             const QDate& date, const QTime& start, const QTime& end,
                             QWidget* parent)
    : QDialog(parent), heThong(sys), maSan(maSan), ngay(date), gioBD(start), gioKT(end) {

    setWindowTitle("ƒê·∫∑t s√¢n");
    setModal(true);
    resize(500, 350);

    auto* layout = new QVBoxLayout(this);

    // Th√¥ng tin s√¢n
    auto* grpInfo = new QGroupBox("Th√¥ng tin ƒë·∫∑t s√¢n");
    auto* infoLayout = new QGridLayout(grpInfo);

    infoLayout->addWidget(new QLabel("<b>S√¢n:</b>"), 0, 0);
    infoLayout->addWidget(new QLabel(QString("%1 - %2").arg(maSan).arg(tenSan)), 0, 1);
    infoLayout->addWidget(new QLabel("<b>Ng√†y:</b>"), 1, 0);
    infoLayout->addWidget(new QLabel(date.toString("dd/MM/yyyy")), 1, 1);
    infoLayout->addWidget(new QLabel("<b>Th·ªùi gian:</b>"), 2, 0);
    infoLayout->addWidget(new QLabel(QString("%1 - %2").arg(start.toString("HH:mm")).arg(end.toString("HH:mm"))), 2, 1);

    int phut = start.secsTo(end) / 60;
    infoLayout->addWidget(new QLabel("<b>Th·ªùi l∆∞·ª£ng:</b>"), 3, 0);
    infoLayout->addWidget(new QLabel(QString("%1 ph√∫t").arg(phut)), 3, 1);

    layout->addWidget(grpInfo);

    // Form kh√°ch h√†ng
    auto* grpKH = new QGroupBox("Th√¥ng tin kh√°ch h√†ng");
    auto* khLayout = new QGridLayout(grpKH);

    cboKhach = new QComboBox;
    khLayout->addWidget(new QLabel("Kh√°ch h√†ng:"), 0, 0);
    khLayout->addWidget(cboKhach, 0, 1);

    layout->addWidget(grpKH);
    layout->addStretch();

    // Buttons
    auto* btnBox = new QDialogButtonBox(QDialogButtonBox::Ok | QDialogButtonBox::Cancel);
    btnBox->button(QDialogButtonBox::Ok)->setText("‚úÖ ƒê·∫∑t s√¢n");
    btnBox->button(QDialogButtonBox::Cancel)->setText("‚ùå H·ªßy");
    layout->addWidget(btnBox);

    connect(btnBox, &QDialogButtonBox::accepted, this, &BookingDialog::onConfirm);
    connect(btnBox, &QDialogButtonBox::rejected, this, &QDialog::reject);
    connect(cboKhach, QOverload<int>::of(&QComboBox::activated),
            this, &BookingDialog::onKhachHangSelected);

    loadKhachHangComboBox();
}

void BookingDialog::loadKhachHangComboBox() {
    QString maKHHienTai = cboKhach->currentData().toString();
    cboKhach->clear();

    // M·ª•c 0: Th√™m m·ªõi
    cboKhach->addItem("--- Th√™m kh√°ch h√†ng m·ªõi ---");
    cboKhach->setItemData(0, QVariant(""));

    // T·∫£i danh s√°ch
    const auto& dsKH = heThong->getDanhSachKhach();
    for (int i = 0; i < dsKH.getKichThuoc(); ++i) {
        const KhachHang& kh = dsKH[i];
        QString displayText = QString::fromStdString(kh.getMaKH() + " - " + kh.getHoTen());
        QString maKH = QString::fromStdString(kh.getMaKH());
        cboKhach->addItem(displayText, QVariant(maKH));
    }

    // T·ª± ƒë·ªông ch·ªçn l·∫°i
    if (!maKHHienTai.isEmpty()) {
        int index = cboKhach->findData(maKHHienTai);
        if (index != -1) {
            cboKhach->setCurrentIndex(index);
        }
    }
}

void BookingDialog::onKhachHangSelected(int index) {
    if (index == 0) {
        AddCustomerDialog dlg(heThong, this);
        if (dlg.exec() == QDialog::Accepted) {
            loadKhachHangComboBox();
            QString maKHVuaTao = dlg.getNewMaKH();
            int newIndex = cboKhach->findData(maKHVuaTao);
            if (newIndex != -1) {
                cboKhach->setCurrentIndex(newIndex);
            }
        } else {
            cboKhach->setCurrentIndex(0);
        }
    }
}

void BookingDialog::onConfirm() {
    QString maKH_q = cboKhach->currentData().toString();

    if (maKH_q.isEmpty()) {
        QMessageBox::warning(this, "L·ªói", "Vui l√≤ng ch·ªçn kh√°ch h√†ng ho·∫∑c th√™m kh√°ch h√†ng m·ªõi!");
        return;
    }

    std::string maKH = maKH_q.toStdString();

    // ƒê·∫∑t s√¢n
    QString dtStr = ngay.toString("dd/MM/yyyy") + " " + gioBD.toString("HH:mm");
    time_t tBD = QuanLyThueSan::parseDateTime(dtStr.toStdString());
    time_t tKT = tBD + gioBD.secsTo(gioKT);

    std::string maLD;
    double tien = 0;

    if (!heThong->datSanAPI(maKH, maSan.toStdString(), tBD, tKT, maLD, tien)) {
        QMessageBox::critical(this, "L·ªói", "Kh√¥ng th·ªÉ ƒë·∫∑t s√¢n!\n(Tr√πng l·ªãch ho·∫∑c l·ªói h·ªá th·ªëng)");
        return;
    }

    // Th√†nh c√¥ng
    QString msg = QString(
                      "‚úÖ <b>ƒê·∫∑t s√¢n th√†nh c√¥ng!</b><br><br>"
                      "üìã M√£ l·ªãch: <b>%1</b><br>"
                      "üèüÔ∏è S√¢n: <b>%2</b><br>"
                      "üìÖ Ng√†y: <b>%3</b><br>"
                      "üïê Gi·ªù: <b>%4 - %5</b><br>"
                      "üí∞ Ti·ªÅn: <b>%6 VND</b><br><br>"
                      "‚ö†Ô∏è <i>Vui l√≤ng thanh to√°n tr∆∞·ªõc khi s·ª≠ d·ª•ng s√¢n.</i>"
                      ).arg(QString::fromStdString(maLD))
                      .arg(maSan)
                      .arg(ngay.toString("dd/MM/yyyy"))
                      .arg(gioBD.toString("HH:mm"))
                      .arg(gioKT.toString("HH:mm"))
                      .arg(QString::number((qlonglong)tien));

    QMessageBox msgBox(this);
    msgBox.setWindowTitle("ƒê·∫∑t s√¢n th√†nh c√¥ng");
    msgBox.setTextFormat(Qt::RichText);
    msgBox.setText(msg);
    msgBox.setIcon(QMessageBox::Information);
    msgBox.exec();

    accept();
}
